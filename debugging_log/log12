Sat Sep 2 21:42:27 EDT 2017
+b test1.c:13 if i >= 65502
Breakpoint 1 at 0x400941: file test1.c, line 13.
+run
Starting program: /home/u89/wang2226/cs252/lab1-src/test1 

Breakpoint 1, main () at test1.c:13
13	    char * p1 = (char *) malloc(15 );
+n
14	    *p1 = 100;
+s
12	  for ( i = 0; i < allocations; i++ ) {
+n

Breakpoint 1, main () at test1.c:13
13	    char * p1 = (char *) malloc(15 );
+s
malloc (size=15) at MyMalloc.c:393
393	  pthread_mutex_lock(&mutex);
+n
394	  increaseMallocCalls();
+n
396	  return allocateObject(size);
+n

Program received signal SIGSEGV, Segmentation fault.
0x0000000000400ced in allocateObject (size=15) at MyMalloc.c:187
187			setSize(newChunk,real_size);
+run
Starting program: /home/u89/wang2226/cs252/lab1-src/test1 

Breakpoint 1, main () at test1.c:13
13	    char * p1 = (char *) malloc(15 );
+s
malloc (size=15) at MyMalloc.c:393
393	  pthread_mutex_lock(&mutex);
+n
394	  increaseMallocCalls();
+n
396	  return allocateObject(size);
+s
allocateObject (size=15) at MyMalloc.c:119
119	  if (!_initialized)
+n
122	  if(size <= 0)
+n
125	  if(size > ARENA_SIZE){
+n
131	  size_t round_size = (size + 8 - 1) & ~(8 - 1);
+n
134	  size_t real_size = round_size + sizeof(BoundaryTag);
+n
136	  if(real_size < sizeof(FreeObject)){
+n
140	  if(real_size > ARENA_SIZE - 3 * sizeof(BoundaryTag)){
+n
145	  FreeObject * p = _freeList->free_list_node._next;
+n
148	  int flag = 0;
+n
151	  while(p != _freeList){
+n
210	  if(flag){
+n
246	  pthread_mutex_unlock(&mutex);
+n
247	  return (void *)((BoundaryTag *)p + 1);
+info b
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x0000000000400941 in main at test1.c:13
	stop only if i >= 65502
	breakpoint already hit 1 time
+info b
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x0000000000400941 in main at test1.c:13
	stop only if i >= 65502
	breakpoint already hit 1 time
+d 1
+b test1.c:13 if i >= 65501
Breakpoint 2 at 0x400941: file test1.c, line 13.
+run
Starting program: /home/u89/wang2226/cs252/lab1-src/test1 

Breakpoint 2, main () at test1.c:13
13	    char * p1 = (char *) malloc(15 );
+s
malloc (size=15) at MyMalloc.c:393
393	  pthread_mutex_lock(&mutex);
+n
394	  increaseMallocCalls();
+n
396	  return allocateObject(size);
+s
allocateObject (size=15) at MyMalloc.c:119
119	  if (!_initialized)
+n
122	  if(size <= 0)
+n
125	  if(size > ARENA_SIZE){
+n
131	  size_t round_size = (size + 8 - 1) & ~(8 - 1);
+n
134	  size_t real_size = round_size + sizeof(BoundaryTag);
+n
136	  if(real_size < sizeof(FreeObject)){
+n
140	  if(real_size > ARENA_SIZE - 3 * sizeof(BoundaryTag)){
+n
145	  FreeObject * p = _freeList->free_list_node._next;
+n
148	  int flag = 0;
+n
151	  while(p != _freeList){
+n
152	  	flag = 0;	
+n
155		size_t obj_size = getSize(&(p->boundary_tag));
+n
158		if((obj_size >= real_size) && (obj_size < (real_size + 2 * sizeof(BoundaryTag)))){
+n
159			setSize(&(p->boundary_tag), (obj_size - real_size));
+p obj_size
$1 = 48
+n
162			setAllocated(&(p->boundary_tag),1);
+n
165			p->free_list_node._next->free_list_node._prev = p->free_list_node._prev;
+n
166			p->free_list_node._prev->free_list_node._next = p->free_list_node._next;
+n
168			break;
+p p->free_list_node._next
$2 = (struct FreeObject *) 0x6020e0 <_freeListSentinel>
+p p->free_list_node._prev
$3 = (struct FreeObject *) 0x6020e0 <_freeListSentinel>
+n
210	  if(flag){
+n
246	  pthread_mutex_unlock(&mutex);
+n
247	  return (void *)((BoundaryTag *)p + 1);
+n
248	}
+n
malloc (size=15) at MyMalloc.c:397
397	}
+n
main () at test1.c:14
14	    *p1 = 100;
+n
12	  for ( i = 0; i < allocations; i++ ) {
+n

Breakpoint 2, main () at test1.c:13
13	    char * p1 = (char *) malloc(15 );
+s
malloc (size=15) at MyMalloc.c:393
393	  pthread_mutex_lock(&mutex);
+s
pthread_mutex_lock (mutex=0x602140 <mutex>) at forward.c:192
192	forward.c: No such file or directory.
+info b
Num     Type           Disp Enb Address            What
2       breakpoint     keep y   0x0000000000400941 in main at test1.c:13
	stop only if i >= 65501
	breakpoint already hit 2 times
+d 2
+b test1:13 if i >= 65502
No source file named test1.
Breakpoint 3 (test1:13 if i >= 65502) pending.
+run
Starting program: /home/u89/wang2226/cs252/lab1-src/test1 

Program received signal SIGSEGV, Segmentation fault.
0x0000000000400ced in allocateObject (size=15) at MyMalloc.c:187
187			setSize(newChunk,real_size);
+n

Program terminated with signal SIGSEGV, Segmentation fault.
The program no longer exists.
+info b
Num     Type           Disp Enb Address    What
3       breakpoint     keep y   <PENDING>  test1:13 if i >= 65502
+d 3
+b test1.c:13 if i >= 65502
Breakpoint 4 at 0x400941: file test1.c, line 13.
+run
Starting program: /home/u89/wang2226/cs252/lab1-src/test1 

Breakpoint 4, main () at test1.c:13
13	    char * p1 = (char *) malloc(15 );
+s
malloc (size=15) at MyMalloc.c:393
393	  pthread_mutex_lock(&mutex);
+n
394	  increaseMallocCalls();
+n
396	  return allocateObject(size);
+s
allocateObject (size=15) at MyMalloc.c:119
119	  if (!_initialized)
+n
122	  if(size <= 0)
+n
125	  if(size > ARENA_SIZE){
+n
131	  size_t round_size = (size + 8 - 1) & ~(8 - 1);
+n
134	  size_t real_size = round_size + sizeof(BoundaryTag);
+n
136	  if(real_size < sizeof(FreeObject)){
+n
140	  if(real_size > ARENA_SIZE - 3 * sizeof(BoundaryTag)){
+p real_size
$4 = 32
+n
145	  FreeObject * p = _freeList->free_list_node._next;
+n
148	  int flag = 0;
+p p 
$5 = (FreeObject *) 0x6020e0 <_freeListSentinel>
+p _freeList
$6 = (FreeObject *) 0x6020e0 <_freeListSentinel>
+make
+./test1
Undefined command: "".  Try "help".
+run
`/home/u89/wang2226/cs252/lab1-src/test1' has changed; re-reading symbols.
Starting program: /home/u89/wang2226/cs252/lab1-src/test1 

Breakpoint 4, main () at test1.c:13
13	    char * p1 = (char *) malloc(15 );
+s
malloc (size=15) at MyMalloc.c:397
397	  pthread_mutex_lock(&mutex);
+q
